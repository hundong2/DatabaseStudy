#example dataframe 
import pandas as pd
from pandas import Series, DataFrame

def example1():
    df=pd.read_csv('./examplefile/분개장.csv', encoding='utf-8')
    print(df.shape) #(24237, 9) 24237 row, 9 column
    print(df.size) #218133
    print(df.dtypes)
    '''
    전표일자       object
    전표번호        int64
    계정코드        int64
    계정과목       object
    차변금액       object
    대변금액       object
    거래처       float64
    승인일자       object
    프로젝트코드     object
    dtype: object
    '''
    print(df['차변금액'].dtypes) #object

def example2():
    df=pd.read_csv('./examplefile/분개장.csv', encoding='utf-8')
    #df['차변금액'] = df['차변금액'].astype('int64') #error ValueError: invalid literal for int() with base 10: '832,000' comma(,)
    df['차변금액'] = df['차변금액'].str.replace(',', '').astype('int64')
    print(df['차변금액'])
    '''
    0           832000
    1            83200
    2                0
    3           120340
    4            12034
            ...
    24232    536903920
    24233            0
    24234    350000000
    24235            0
    24236            0
    Name: 차변금액, Length: 24237, dtype: int64
    '''
def example3():
    print("example3\n")
    df=pd.read_csv('./examplefile/분개장.csv', encoding='utf-8')
    print(df.describe())
    '''
            전표번호          계정코드           거래처
    count  24237.000000  24237.000000  20426.000000
    mean      37.176094  35896.629203  16026.504014
    std       46.799656  26980.717131  32424.442300
    min        1.000000  10100.000000    107.000000
    25%        8.000000  13500.000000   1873.000000
    50%       23.000000  25300.000000   3909.000000
    75%       42.000000  51500.000000   5502.250000
    max      274.000000  99800.000000  99620.000000
    '''
    print(df.describe)
    '''
    <bound method NDFrame.describe of              전표일자  전표번호   계정코드        계정과목         차변금액         대변금액     거래처        승인일자 프로젝트코드
    0      2016-01-01     1  53100       지급수수료      832,000            0  1404.0  2016-01-01   0001
    1      2016-01-01     1  13500      부가세대급금       83,200            0  1404.0  2016-01-01    NaN
    2      2016-01-01     1  25300        미지급금            0      915,200  1404.0  2016-01-01   0031
    3      2016-01-01     2  53100       지급수수료      120,340            0  2161.0  2016-01-01   0026
    4      2016-01-01     2  13500      부가세대급금       12,034            0  2161.0  2016-01-01    NaN
    ...           ...   ...    ...         ...          ...          ...     ...         ...    ...
    24232  2016-06-30   273  84000     무형자산상각비  536,903,920            0     NaN  2016-06-30   0001
    24233  2016-06-30   273  24400  상각누계액(개발비)            0  536,903,920     NaN  2016-06-30    NaN
    24234  2016-06-30   274  10300        보통예금  350,000,000            0   280.0  2016-06-30   FSS5
    24235  2016-06-30   274  25500      부가세예수금            0   31,818,182   280.0  2016-06-30   FSS5
    24236  2016-06-30   274  40100        상품매출            0  318,181,818   280.0  2016-06-30   FSS5
    '''
    print(df)
    '''
    [24237 rows x 9 columns]>
                전표일자  전표번호   계정코드        계정과목         차변금액         대변금액     거래처        승인일자 프로젝트코드
    0      2016-01-01     1  53100       지급수수료      832,000            0  1404.0  2016-01-01   0001
    1      2016-01-01     1  13500      부가세대급금       83,200            0  1404.0  2016-01-01    NaN
    2      2016-01-01     1  25300        미지급금            0      915,200  1404.0  2016-01-01   0031
    3      2016-01-01     2  53100       지급수수료      120,340            0  2161.0  2016-01-01   0026
    4      2016-01-01     2  13500      부가세대급금       12,034            0  2161.0  2016-01-01    NaN
    ...           ...   ...    ...         ...          ...          ...     ...         ...    ...
    24232  2016-06-30   273  84000     무형자산상각비  536,903,920            0     NaN  2016-06-30   0001
    24233  2016-06-30   273  24400  상각누계액(개발비)            0  536,903,920     NaN  2016-06-30    NaN
    24234  2016-06-30   274  10300        보통예금  350,000,000            0   280.0  2016-06-30   FSS5
    24235  2016-06-30   274  25500      부가세예수금            0   31,818,182   280.0  2016-06-30   FSS5
    24236  2016-06-30   274  40100        상품매출            0  318,181,818   280.0  2016-06-30   FSS5

    '''
    print(df.head()) #first ~ 5 rows 
    '''
    [24237 rows x 9 columns]
            전표일자  전표번호   계정코드    계정과목     차변금액     대변금액     거래처        승인일자 프로젝트코드
    0  2016-01-01     1  53100   지급수수료  832,000        0  1404.0  2016-01-01   0001
    1  2016-01-01     1  13500  부가세대급금   83,200        0  1404.0  2016-01-01    NaN
    2  2016-01-01     1  25300    미지급금        0  915,200  1404.0  2016-01-01   0031
    3  2016-01-01     2  53100   지급수수료  120,340        0  2161.0  2016-01-01   0026
    4  2016-01-01     2  13500  부가세대급금   12,034        0  2161.0  2016-01-01    NaN
    '''
    print(df.tail()) # last-5 ~ last
    '''
                 전표일자  전표번호   계정코드        계정과목         차변금액         대변금액    거래처        승인일자 프로젝트코드
    24232  2016-06-30   273  84000     무형자산상각비  536,903,920            0    NaN  2016-06-30   0001
    24233  2016-06-30   273  24400  상각누계액(개발비)            0  536,903,920    NaN  2016-06-30    NaN
    24234  2016-06-30   274  10300        보통예금  350,000,000            0  280.0  2016-06-30   FSS5
    24235  2016-06-30   274  25500      부가세예수금            0   31,818,182  280.0  2016-06-30   FSS5
    24236  2016-06-30   274  40100        상품매출            0  318,181,818  280.0  2016-06-30   FSS5
    '''
    df['차변금액'] = df['차변금액'].str.replace(',', '').astype('int64')
    df['대변금액'] = df['대변금액'].str.replace(',', '').astype('int64')
    print(df[df['차변금액'] > 100000000].head())
    '''
            전표일자  전표번호   계정코드   계정과목       차변금액 대변금액      거래처        승인일자 프로젝트코드
    27   2016-01-01    12  26000  단기차입금  582544710    0      NaN  2016-01-01    NaN
    66   2016-01-03     4  10800  외상매출금  170733444    0   2134.0  2016-01-03   0006
    69   2016-01-03     5  10800  외상매출금  416409256    0   1384.0  2016-01-03   0006
    177  2016-01-05     1  10300   보통예금  120000000    0  98003.0  2016-01-05    NaN
    184  2016-01-05     2  25100  외상매입금  115610402    0   3777.0  2016-01-05    NaN
    '''
    print(df['차변금액'] > 100000000)
    '''
    0        False
    1        False
    2        False
    3        False
    4        False
            ...
    24232     True
    24233    False
    24234     True
    24235    False
    24236    False
    '''
    #multi filtering 
    print(df[(df['차변금액'] > 100000000) | (df['대변금액'] > 100000000)].head())
    '''
            전표일자  전표번호   계정코드   계정과목       차변금액       대변금액     거래처        승인일자 프로젝트코드
    24  2016-01-01    12  10800  외상매출금          0  582544710   304.0  2016-01-01    NaN
    27  2016-01-01    12  26000  단기차입금  582544710          0     NaN  2016-01-01    NaN
    66  2016-01-03     4  10800  외상매출금  170733444          0  2134.0  2016-01-03   0006
    68  2016-01-03     4  40400   제품매출          0  170733444  2134.0  2016-01-03   0006
    69  2016-01-03     5  10800  외상매출금  416409256          0  1384.0  2016-01-03   0006
    '''

#dataframe sort 
def example4dataframesort():
    items={'code': [1,2,3,4], '계정과목': ['매출채권', '매출원가', '현금', '자본'],
           '금액':[1500, 15000, 1000, 500],
           '재무제표': ['재무상태표', '손익계산서', '현금흐름표', '자본변동표']}
    data=DataFrame(items)
    print(data)
    '''
       code  계정과목     금액   재무제표
    0     1  매출채권   1500  재무상태표
    1     2  매출원가  15000  손익계산서
    2     3    현금   1000  현금흐름표
    3     4    자본    500  자본변동표
    '''
    #DataFrame.sort_value(by=['column name'], axxis=0) ( axis=0: default )
    print(data.sort_values(by=['계정과목']))
    '''
       code  계정과목     금액   재무제표
    1     2  매출원가  15000  손익계산서
    0     1  매출채권   1500  재무상태표
    3     4    자본    500  자본변동표
    2     3    현금   1000  현금흐름표
    '''
    print(data.sort_values(by=['계정과목'], ascending=False)) #descending 
    '''
       code  계정과목     금액   재무제표
    2     3    현금   1000  현금흐름표
    3     4    자본    500  자본변동표
    0     1  매출채권   1500  재무상태표
    1     2  매출원가  15000  손익계산서
    '''
    print(data.sort_index(axis=1))
    '''
       code  계정과목     금액   재무제표
    0     1  매출채권   1500  재무상태표
    1     2  매출원가  15000  손익계산서
    2     3    현금   1000  현금흐름표
    3     4    자본    500  자본변동표
    '''
    print(data.sort_index(axis=1, ascending=False))
    '''
        재무제표     금액  계정과목  code
    0  재무상태표   1500  매출채권     1
    1  손익계산서  15000  매출원가     2
    2  현금흐름표   1000    현금     3
    3  자본변동표    500    자본     4
    '''
    print(data['계정과목'])
    '''
    0    매출채권
    1    매출원가
    2      현금
    3      자본
    Name: 계정과목, dtype: object
    '''
    
    print(data[['계정과목','code']])
    '''
       계정과목  code
    0  매출채권     1
    1  매출원가     2
    2    현금     3
    3    자본     4
    '''

    print(data.columns) #Index(['code', '계정과목', '금액', '재무제표'], dtype='object')
    print(data.columns[0]) #code 
    print(data.columns[[0,2]]) #Index(['code', '금액'], dtype='object')
    
    a=data.columns[[2,0]]
    print("data.columns[[2,0]]\n{}\n".format(a))
    '''
    data.columns[[2,0]]
    Index(['금액', 'code'], dtype='object')
    '''
    
    print("data[data.columns[[2,0]]]\n{}\n".format(data[a]))
    '''
    data[data.columns[[2,0]]]
        금액  code
    0   1500     1
    1  15000     2
    2   1000     3
    3    500     4
    '''
    #drop(), insert()
    print("data frame drop(), insert()\n")
    print(data)
    '''
        code  계정과목     금액   재무제표
    0     1  매출채권   1500  재무상태표
    1     2  매출원가  15000  손익계산서
    2     3    현금   1000  현금흐름표
    3     4    자본    500  자본변동표
    '''
    df1=data.drop('금액', axis=1)
    print(df1)
    '''
       code  계정과목   재무제표
    0     1  매출채권  재무상태표
    1     2  매출원가  손익계산서
    2     3    현금  현금흐름표
    3     4    자본  자본변동표
    '''
    #df2=data.drop('금액', axis=0), df2=data.drop('금액')#KeyError: "['금액'] not found in axis"

    '''
    insert(self, loc, column, value, allow_duplicates=False) unbound pandas.core.frame.DataFrame method
    Insert column into DataFrame at specified location.
    '''
    df1.insert(0, '금액', data['금액'])
    print(df1)
    '''
          금액  code  계정과목   재무제표
    0   1500     1  매출채권  재무상태표
    1  15000     2  매출원가  손익계산서
    2   1000     3    현금  현금흐름표 
    3    500     4    자본  자본변동표
    '''

def main():
    print("example dataframe")
    
    #example1()
    #example2()
    #example3()
    example4dataframesort()
if __name__=="__main__":
    main()